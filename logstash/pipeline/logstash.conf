input {
  beats {
    port => 5044
    client_inactivity_timeout => 120
  }
}

filter {
  json {
    source => "message"
    skip_on_invalid_json => true
  }

  # Normalize log level
  if [levelname] and ![log][level] {
    mutate { add_field => { "[log][level]" => "%{[levelname]}" } }
  } else if [level] and ![log][level] {
    mutate { add_field => { "[log][level]" => "%{[level]}" } }
  }

  if ![service][version] {
    mutate { add_field => { "[service][version]" => "0.1.0" } }
  }

  if [prospect_email] and ![conversation][thread_id] {
    mutate {
      add_field => {
        "[conversation][thread_id]" => "%{[prospect_email]}|%{[subject]}"
      }
    }
  }

  mutate {
    rename => {
      "prospect_email" => "[prospect][email]"
      "subject" => "[prospect][subject]"
      "classification" => "[email][classification]"
      "research_performed" => "[email][research_performed]"
      "action_id" => "[slack][action_id]"
      "user_name" => "[slack][user]"
      "channel_id" => "[slack][channel_id]"
      "status_code" => "[http][response][status_code]"
    }
  }

  if [email][research_performed] {
    mutate {
      gsub => ["[email][research_performed]", "^(false|False)$", "false"]
      gsub => ["[email][research_performed]", "^(true|True)$", "true"]
    }
  }

  if ![event][timezone_offset] {
    mutate { add_field => { "[event][timezone_offset]" => "+05:30" } }
  }

  ruby {
    code => '
      fields_to_mask = ["draft_reply","edited_text","body","conversation_history"]
      fields_to_mask.each do |f|
        if event.get(f)
          content = event.get(f).to_s
          event.set("[content][#{f}][length]", content.length)
          event.set(f, "[REDACTED_CONTENT]")
        end
      end
    '
  }

  if [log][level] =~ /ERROR|CRITICAL/ {
    mutate { add_field => { "is_error" => true } }
  } else {
    mutate { add_field => { "is_error" => false } }
  }

  if [message] =~ "GET /health" {
    drop { }
  }

  if ![@timestamp] and [asctime] {
    date {
      match => ["asctime","ISO8601","yyyy-MM-dd HH:mm:ss,SSS"]
      target => "@timestamp"
    }
  }
  if ![@timestamp] {
    mutate { add_field => { "@timestamp" => "%{+YYYY-MM-dd HH:mm:ss}" } }
  }
}

output {
  if [is_error] == true {
    # If the log is an error, send it to the error index.
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "agentic-sales-copilot-error"
    }
  } else {
    # Otherwise, send it to the main index.
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "agentic-sales-copilot"
    }
  }
}